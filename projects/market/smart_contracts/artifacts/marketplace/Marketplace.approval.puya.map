{
  "version": 3,
  "sources": [
    "../../marketplace/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;AAAA;AAOK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPL;;;AAAA;AAAA;;AAAA;;;AAAA;AAOK;;;AAAA;AAAA;AAOA;;AAAA;AAAA;AAAA;;AAAA;AAdL;;;AAAA;AAcK;;;AAAA;AAAA;AAOA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBK;;;AAAA;AAAA;AAgBA;;AAAA;AAAA;AAAA;;AAAA;AArCL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAqCK;;;AAAA;AAAA;AAeA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AApDL;AAAA;AAOA;;;AAGQ;AAAA;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;;AAGR;;;AAEe;;AAAc;;AAAd;AAAP;AACA;AAAA;;AAAA;;AAIR;;;AAEe;;AAAc;;AAAd;AAAP;AACW;;AAAqD;AAAA;AAAA;AAAA;AAArD;;AAAA;;AAAJ;AAAP;AACO;;AAAA;;AAAmB;;AAAnB;AAAP;AACO;;AAAA;;AAAiB;;AAAqB;;AAArB;AAAjB;AAAP;AAGA;AACe;AAAA;AAAA;AAAA;AACM;;AACF;;;;;;;AAHnB;;;AAAA;;;AAAA;;AAQR;;;AAEe;AAAA;AAAA;AAAA;AAAP;AACO;;AAAc;;AAAA;;AAAd;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAqB;;AAArB;AAAP;AACO;;AAAA;;AAAmB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAnB;AAAP;AAGA;AACiB;AAAA;AAAA;AAAA;;;;;;;;;AADjB;;;AAAA;;;AAAA;;AAOR;;;AAEe;;AAAc;;AAAd;AAAP;AAGA;AACiB;AAAA;AAAA;AAAA;AACI;;AAED;;;AADD;;;;;;;AAHnB;;;AAAA;;;AAAA;AAQA;AACe;;AAEU;;;AADZ;;;;;AAFb;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.approval_program",
      "params": {},
      "block": "smart_contracts.marketplace.contract.Marketplace.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 4"
    },
    "6": {
      "op": "bytecblock \"assetId\" \"listingPrice\""
    },
    "29": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "32": {
      "op": "return",
      "stack_out": []
    },
    "33": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "36": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "38": {
      "op": "bz __puya_arc4_router___after_if_else@10",
      "stack_out": []
    },
    "41": {
      "op": "pushbytess 0xa9113878 0xa8d205a2 0x37e84677 0x790bf59f 0x2487c32c // method \"createApplication(asset,uint64)void\", method \"setPrice(uint64)void\", method \"optInToAsset(pay)void\", method \"buy(pay,uint64)void\", method \"deleteApplication()void\""
    },
    "68": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(buy(pay,uint64)void)",
        "Method(createApplication(asset,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(optInToAsset(pay)void)",
        "Method(setPrice(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(asset,uint64)void)",
        "Method(setPrice(uint64)void)",
        "Method(optInToAsset(pay)void)",
        "Method(buy(pay,uint64)void)",
        "Method(deleteApplication()void)",
        "tmp%2#0"
      ]
    },
    "71": {
      "op": "match __puya_arc4_router___createApplication_route@2 __puya_arc4_router___setPrice_route@3 __puya_arc4_router___optInToAsset_route@4 __puya_arc4_router___buy_route@5 __puya_arc4_router___deleteApplication_route@6",
      "stack_out": []
    },
    "83": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "84": {
      "retsub": true,
      "op": "retsub"
    },
    "85": {
      "block": "__puya_arc4_router___createApplication_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "87": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "88": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "89": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "91": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "92": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "93": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "96": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "97": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "99": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "102": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "103": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "107": {
      "retsub": true,
      "op": "retsub"
    },
    "108": {
      "block": "__puya_arc4_router___setPrice_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "110": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "114": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "115": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "118": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "119": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.setPrice",
      "op": "callsub setPrice",
      "stack_out": []
    },
    "122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "123": {
      "retsub": true,
      "op": "retsub"
    },
    "124": {
      "block": "__puya_arc4_router___optInToAsset_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "126": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "127": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "128": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "130": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "131": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "133": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "1"
      ]
    },
    "134": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "135": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "136": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "138": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "139": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "140": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "141": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.optInToAsset",
      "op": "callsub optInToAsset",
      "stack_out": []
    },
    "144": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "145": {
      "retsub": true,
      "op": "retsub"
    },
    "146": {
      "block": "__puya_arc4_router___buy_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "148": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "149": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "150": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "152": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "153": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "155": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "1"
      ]
    },
    "156": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "157": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "158": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "160": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "161": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "162": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "163": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%28#0"
      ]
    },
    "166": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%29#0"
      ]
    },
    "167": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.buy",
      "op": "callsub buy",
      "stack_out": []
    },
    "170": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "171": {
      "retsub": true,
      "op": "retsub"
    },
    "172": {
      "block": "__puya_arc4_router___deleteApplication_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "174": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "DeleteApplication"
      ]
    },
    "176": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "177": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "178": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "180": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "181": {
      "callsub": "smart_contracts.marketplace.contract.Marketplace.deleteApplication",
      "op": "callsub deleteApplication"
    },
    "184": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "185": {
      "retsub": true,
      "op": "retsub"
    },
    "186": {
      "block": "__puya_arc4_router___after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "187": {
      "retsub": true,
      "op": "retsub"
    },
    "188": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.createApplication",
      "params": {
        "assetId#0": "uint64",
        "listingPrice#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "191": {
      "op": "bytec_0 // \"assetId\"",
      "defined_out": [
        "\"assetId\""
      ],
      "stack_out": [
        "\"assetId\""
      ]
    },
    "192": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"assetId\"",
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "\"assetId\"",
        "assetId#0 (copy)"
      ]
    },
    "194": {
      "op": "app_global_put",
      "stack_out": []
    },
    "195": {
      "op": "pushbytes \"lsitingPrice\"",
      "defined_out": [
        "\"lsitingPrice\""
      ],
      "stack_out": [
        "\"lsitingPrice\""
      ]
    },
    "209": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"lsitingPrice\"",
        "listingPrice#0 (copy)"
      ],
      "stack_out": [
        "\"lsitingPrice\"",
        "listingPrice#0 (copy)"
      ]
    },
    "211": {
      "op": "app_global_put",
      "stack_out": []
    },
    "212": {
      "retsub": true,
      "op": "retsub"
    },
    "213": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.setPrice",
      "params": {
        "listingPrice#0": "uint64"
      },
      "block": "setPrice",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "216": {
      "op": "txn Sender"
    },
    "218": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "220": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "221": {
      "op": "assert",
      "stack_out": []
    },
    "222": {
      "op": "bytec_1 // \"listingPrice\"",
      "defined_out": [
        "\"listingPrice\""
      ],
      "stack_out": [
        "\"listingPrice\""
      ]
    },
    "223": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"listingPrice\"",
        "listingPrice#0 (copy)"
      ],
      "stack_out": [
        "\"listingPrice\"",
        "listingPrice#0 (copy)"
      ]
    },
    "225": {
      "op": "app_global_put",
      "stack_out": []
    },
    "226": {
      "retsub": true,
      "op": "retsub"
    },
    "227": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.optInToAsset",
      "params": {
        "mbrPay#0": "uint64"
      },
      "block": "optInToAsset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "230": {
      "op": "txn Sender"
    },
    "232": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "234": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "235": {
      "op": "assert",
      "stack_out": []
    },
    "236": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "238": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "239": {
      "op": "bytec_0 // \"assetId\"",
      "defined_out": [
        "\"assetId\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"assetId\""
      ]
    },
    "240": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "241": {
      "error": "check self.assetId exists",
      "op": "assert // check self.assetId exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "242": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "244": {
      "op": "bury 1",
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "246": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "247": {
      "op": "assert",
      "stack_out": []
    },
    "248": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrPay#0 (copy)"
      ],
      "stack_out": [
        "mbrPay#0 (copy)"
      ]
    },
    "250": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "252": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "254": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "255": {
      "op": "assert",
      "stack_out": []
    },
    "256": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrPay#0 (copy)"
      ]
    },
    "258": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "260": {
      "op": "global MinBalance"
    },
    "262": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "264": {
      "op": "+",
      "defined_out": [
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%13#0"
      ]
    },
    "265": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "266": {
      "op": "assert",
      "stack_out": []
    },
    "267": {
      "op": "itxn_begin"
    },
    "268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "269": {
      "op": "bytec_0 // \"assetId\"",
      "stack_out": [
        "0",
        "\"assetId\""
      ]
    },
    "270": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "271": {
      "error": "check self.assetId exists",
      "op": "assert // check self.assetId exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "272": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "275": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "277": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "279": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "281": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "282": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "284": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "285": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "287": {
      "op": "itxn_submit"
    },
    "288": {
      "retsub": true,
      "op": "retsub"
    },
    "289": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.buy",
      "params": {
        "buyerTxn#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "buy",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "292": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "293": {
      "op": "bytec_1 // \"listingPrice\"",
      "defined_out": [
        "\"listingPrice\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"listingPrice\""
      ]
    },
    "294": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "295": {
      "error": "check self.listingPrice exists",
      "op": "assert // check self.listingPrice exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "296": {
      "op": "assert",
      "stack_out": []
    },
    "297": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "299": {
      "op": "frame_dig -2",
      "defined_out": [
        "buyerTxn#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "buyerTxn#0 (copy)"
      ]
    },
    "301": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "303": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "304": {
      "op": "dig 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%2#0 (copy)"
      ]
    },
    "306": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "307": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "308": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "buyerTxn#0 (copy)"
      ]
    },
    "310": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "312": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "314": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "315": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "316": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "buyerTxn#0 (copy)"
      ]
    },
    "318": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "0"
      ]
    },
    "321": {
      "op": "bytec_1 // \"listingPrice\"",
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "0",
        "\"listingPrice\""
      ]
    },
    "322": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "323": {
      "error": "check self.listingPrice exists",
      "op": "assert // check self.listingPrice exists",
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "324": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%1#0",
        "quantity#0 (copy)",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "quantity#0 (copy)"
      ]
    },
    "326": {
      "op": "*",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "327": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "328": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "329": {
      "op": "itxn_begin"
    },
    "330": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "331": {
      "op": "bytec_0 // \"assetId\"",
      "defined_out": [
        "\"assetId\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"assetId\""
      ]
    },
    "332": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "333": {
      "error": "check self.assetId exists",
      "op": "assert // check self.assetId exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "334": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "quantity#0 (copy)"
      ]
    },
    "336": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "338": {
      "op": "itxn_field XferAsset"
    },
    "340": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "342": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "343": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "345": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "346": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "348": {
      "op": "itxn_submit"
    },
    "349": {
      "retsub": true,
      "op": "retsub"
    },
    "350": {
      "subroutine": "smart_contracts.marketplace.contract.Marketplace.deleteApplication",
      "params": {},
      "block": "deleteApplication",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "353": {
      "op": "txn Sender"
    },
    "355": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "357": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "358": {
      "op": "assert",
      "stack_out": []
    },
    "359": {
      "op": "itxn_begin"
    },
    "360": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "361": {
      "op": "bytec_0 // \"assetId\"",
      "defined_out": [
        "\"assetId\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"assetId\""
      ]
    },
    "362": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "363": {
      "error": "check self.assetId exists",
      "op": "assert // check self.assetId exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "364": {
      "op": "global CreatorAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "366": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "367": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "369": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "370": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "372": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "374": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "376": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "377": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "380": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "382": {
      "op": "itxn_submit"
    },
    "383": {
      "op": "itxn_begin"
    },
    "384": {
      "op": "global CreatorAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%1%%param_CloseRemainderTo_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_CloseRemainderTo_idx_0#0"
      ]
    },
    "387": {
      "op": "itxn_field CloseRemainderTo",
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "389": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "0"
      ]
    },
    "390": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "392": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "394": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "395": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "397": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "398": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "400": {
      "op": "itxn_submit"
    },
    "401": {
      "retsub": true,
      "op": "retsub"
    }
  }
}